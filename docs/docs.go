// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/convert": {
            "post": {
                "description": "Converts a URL or HTML to PDF document",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "convert"
                ],
                "summary": "Converts a URL or HTML to PDF document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "URL",
                        "name": "url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "result.pdf",
                        "description": "Filename of the resulting pdf",
                        "name": "filename",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "HTML to convert",
                        "name": "html",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "en-US",
                        "description": "Page locale",
                        "name": "locale",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Enable Javascript",
                        "name": "javascript",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "A4",
                        "description": "Page format",
                        "name": "format",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Disable network connectivity",
                        "name": "offline",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "print",
                            "screen"
                        ],
                        "type": "string",
                        "default": "print",
                        "description": "Page media mode",
                        "name": "media",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Page margin top",
                        "name": "marginTop",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Page margin right",
                        "name": "marginRight",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Page margin bottom",
                        "name": "marginBottom",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Page footer template",
                        "name": "footerTemplate",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Page header template",
                        "name": "headerTemplate",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Returns basic metrics about the server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Basic metrics endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.metricsResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Check if the server is ready to accept requests",
                "tags": [
                    "ping"
                ],
                "summary": "Check if the server is ready to accept requests",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.metricsResponse": {
            "type": "object",
            "properties": {
                "activeContexts": {
                    "type": "integer"
                },
                "activePages": {
                    "type": "integer"
                },
                "isConnected": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "localhost:3000",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
